#!/usr/bin/env python3
# -------------------------------------------------------------------------------
# imports
# -------------------------------------------------------------------------------
import os
import time
import sys
import argparse
# import logging
# import yaml  # pip install pyyaml
import zmq   # pip install pyzmq
# from daemons.prefab import run

# -------------------------------------------------------------------------------
# main program
# -------------------------------------------------------------------------------
if __name__ == '__main__':
    DIR = os.path.normpath(os.path.dirname(os.path.dirname(os.path.abspath(os.path.realpath(__file__)))))
    CONF = DIR + "/etc/orchestrate.yaml"

    # -------------------------------------------------------------------------------
    # parse the command line
    # -------------------------------------------------------------------------------
    parser = argparse.ArgumentParser(
        description='Orchestrate the autonomous secure operation of tradegen processes')

    # position argument
    parser.add_argument("command", help="specify the command you want to run", type=str)

    # optional arguments
    parser.add_argument('-v', '--verbose', action="store_true", help="enable verbose mode")
    parser.add_argument('-n', '--noaction', action="store_true",
                        help="print what would be done without actually doing it")
    parser.add_argument('-c', '--conf',
                        help="Specify a config file. By default {}".format(CONF))

    parser.add_argument('-p', '--port', type=int, default=8899,
                        help="Specify the port number for communication channel(socket). By default".format(
                            8899))

    args = parser.parse_args()
    command = args.command

    context = zmq.Context()
    socket = context.socket(zmq.PUB)
    socket.bind("tcp://*:{}".format(args.port))


    time.sleep(1)
    print("Sending command {}".format(command))
    socket.send_string(command)
